HTML

<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Responsive Card Layout</title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="stylesheet" href="styles.css" />
  </head>
  <body>
<div class="c-magic-area c-magic-area--content" data-target-class=".c-article__link" data-tween-back="false" aria-hidden="true"></div>

<section class="o-main-section">
    <article class="c-article">
      <a class="c-article__link" href="#">
        <div>
          <header>
            <h3 class="c-article__heading">Ink transition with PNG sprite</h3>
          </header>
          <div class="c-article__content">
            Animate images with ink transition in PNG sprite.
          </div>
        </div>
        <div class="c-article__img-wrapper">
          <img class="c-article__img" src="https://assets.codepen.io/204808/shin-yun-bok-ink.png" alt="Ink transition with PNG sprite" />
        </div>
      </a>
    </article>

    <article class="c-article">
      <a class="c-article__link" href="#">
        <div>
          <header>
            <h3 class="c-article__heading">Responsive Mondrian art with CSS grid</h3>
          </header>
          <div class="c-article__content">
            Make a responsive Mondrian art with CSS grid layout.
          </div>
        </div>
        <div class="c-article__img-wrapper">
          <img class="c-article__img" src="https://assets.codepen.io/204808/css-grid-mondrian.png" alt="Responsive Mondrian art with CSS grid" />
        </div>
      </a>
    </article>

    <article class="c-article">
      <a class="c-article__link" href="#">
        <div>
          <header>
            <h3 class="c-article__heading">Space rocket with requestAnimationFrame</h3>
          </header>
          <div class="c-article__content">
            Create the space rocket animation with stars in different perspective.
          </div>
        </div>
        <div class="c-article__img-wrapper">
          <img class="c-article__img" src="https://assets.codepen.io/204808/17.Space-Rocket-with-requestAnimationFrame.png" alt="Responsive Mondrian art with CSS grid" />
        </div>
      </a>
    </article>
</section>
<script src="https://unpkg.co/gsap@3/dist/gsap.min.js"></script>
<script src="script.js"></script>
  </body>
</html>

CSS
body {
  background-color: #fff;
  color: #404040;
  font-family: "Open Sans", sans-serif;
}

.o-main-section {
  margin: 0 auto;
  max-width: 37.5rem;
}

.c-article__link {
  align-items: center;
  color: #404040;
  display: flex;
  justify-content: space-between;
  margin: 1.875rem 0;
  padding: 1.25rem;
  text-decoration: none;
}
.c-article__link * {
  pointer-events: none;
}

.c-article__heading {
  font-size: 1.25rem;
  margin: 0.625rem 0;
}

.c-article__content {
  line-height: 1.5;
  margin: 0.625rem 0;
}

.c-article__img-wrapper {
  height: 6.25rem;
  margin-left: 1.25rem;
  min-width: 10rem;
  width: 10rem;
}

.c-article__img {
  border-radius: 0.125rem;
  display: block;
  height: 100%;
  filter: grayscale(1);
  -o-object-fit: cover;
     object-fit: cover;
  transition: filter 0.3s ease-in;
  width: 100%;
}
.c-article__link:hover .c-article__img {
  filter: grayscale(0);
}

.c-magic-area {
  position: absolute;
  z-index: -1;
}

.c-magic-area--content {
  background-color: rgba(64, 64, 64, 0.15);
  border-radius: 0.125rem;
}
.c-magic-area--content::before {
  background-color: #404040;
  content: "";
  height: 70%;
  left: -0.1875rem;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  width: 0.375rem;
}

JS

const magicAreas = [...document.querySelectorAll(".c-magic-area")];

const getAreaDetails = (area) => {
  const width = area.clientWidth;
  const height = area.clientHeight;

  const position = area.getBoundingClientRect();
  const top = position.top + window.scrollY;
  const left = position.left;
  console.log(position.top);
  return {
    left,
    height,
    top,
    width
  };
};

const setTweenArea = (link, magicArea) => {
  const { left, height, top, width } = getAreaDetails(link);

  gsap.set(magicArea, {
    top,
    left,
    width,
    height
  });
};

const tweenMagicArea = (target, magicArea) => {
  const { left, height, top, width } = getAreaDetails(target);

  gsap.to(magicArea, 0.5, {
    left,
    top,
    width,
    height,
    ease: Power3.easeInOut
  });
};

const getMagicActiveElement = (links) => {
  return links.filter((link) => {
  });
};

const moveMagicArea = (links, magicArea, isTweenBack) => {
  const magicActiveElement = getMagicActiveElement(links);

  links.map((link) => {
    link.addEventListener("mouseenter", function (e) {
      tweenMagicArea(e.target, magicArea);
    });

    link.addEventListener("focus", function (e) {
      tweenMagicArea(e.target, magicArea);
    });

    if (isTweenBack && magicActiveElement.length) {
      link.addEventListener("mouseleave", function (e) {
        tweenMagicArea(magicActiveElement[0], magicArea);
      });

      link.addEventListener("focusout", function (e) {
        tweenMagicArea(magicActiveElement[0], magicArea);
      });
    }
  });
};

const setMagic = (links, magicArea) => {
  // check if .is-magic-active || aria-current="page"
  const magicActiveElement = getMagicActiveElement(links);

  if (magicActiveElement.length) {
    setTweenArea(magicActiveElement[0], magicArea);
  } else {
    setTweenArea(links[0], magicArea);
  }
};

const initMagic = ({ isResize } = { isResize: false }) => {
  if (!magicAreas.length) return;

  magicAreas.map((magicArea) => {
    const targetMagicArea = magicArea.getAttribute("data-target-class");

    const links = [...document.querySelectorAll(targetMagicArea)];

    if (!links.length) return;

    setMagic(links, magicArea);

    if (!isResize) {
      const isTweenBack = magicArea.getAttribute("data-tween-back") === "true";

      moveMagicArea(links, magicArea, isTweenBack);
    }
  });
};

initMagic();
